// Copyright contributors to the IBM Security Verify Adaptive Proxy SDK
// for JavaScript project


const Service = require('../service');


/**
 * A class for making token related requests to OIDC.
 * @extends Service
 * @author Adam Dorogi-Kaposi <adam.dorogi-kaposi@ibm.com>
 */
class TokenService extends Service {
  /**
   * Create a new {@link TokenService} object.
   * @param {Object} auth The credentials to authenticate to OIDC.
   * @param {string} baseURL The base URL for the OIDC API.
   * @param {Object} context The context to send for assessment.
   * @param {string} context.sessionId The session ID generated by the
   * user-agent, using an Adaptive client SDK.
   * @param {string} context.userAgent The user-agent, typically obtained form
   * the User-Agent HTTP header.
   * @param {string} context.ipAddress The IP address of the user-agent.
   */
  constructor(auth, baseURL, context) {
    super(auth, baseURL, context, 'x-www-form-urlencoded');
  }

  /**
   * Revoke an access token.
   * @param {string} accessToken The access token to revoke.
   */
  async revokeAccessToken(accessToken) {
    await this.post('/v1.0/endpoint/default/revoke',
        {token: accessToken});
  }

  /**
   * Refresh an access token.
   * @param {string} refreshToken The refresh token to refresh with.
   * @return {Promise<Object>} The HTTP response body for the refresh token
   * request, containing the new access and refresh tokens.
   */
  async refreshAccessToken(refreshToken) {
    const response = await this.post('/v1.0/endpoint/default/token',
        {grant_type: 'refresh_token', scope: 'openid',
          refresh_token: refreshToken,
          context: this._context});
    return response.data;
  }

  /**
   * Introspect an access or refresh token.
   * @param {string} token The access or refresh token to introspect.
   * @param {string} [tokenTypeHint] The token type. This attribute is an
   * optional hint about the token that is being introspected. Possible values
   * are <code>access_token</code> and <code>refresh_token</code>.
   * @return {Promise<Object>} The HTTP response body for the token introspect
   * request, which is an object containing an <code>"active"</code> property
   * indicating whether the introspected token is valid or invalid. Other
   * properties are also included in the introspection result when the
   * <code>"active"</code> status is <code>true</code>.
   */
  async introspectToken(token, tokenTypeHint) {
    const response = await this.post('/v1.0/endpoint/default/introspect',
        {token, token_type_hint: tokenTypeHint});
    return response.data;
  }
}

module.exports = TokenService;
